defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12-stretch

version: 2
jobs:
  setup:
    <<: *defaults
    steps:
      - run:
          name: "Versions"
          command: |
            node --version
            npm --version
            yarn --version
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - neon-{{ checksum "yarn.lock" }}
            - neon-fallback
      - run:
          name: node hid compilation requirements
          command: sudo apt-get -y install libusb-1.0-0-dev libusb-1.0-0 libudev-dev
      - run: yarn install --cache-folder .cache/yarn
      - save_cache:
          key: neon-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - .cache/yarn
      - run:
          name: Bootstrap
          command: yarn bootstrap
      - run:
          name: Build
          command: yarn build && yarn dist
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - packages

  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: mkdir reports && mkdir reports/lint
      - run:
          name: Lint
          command: |
            CURRENT_BRANCH=$(git symbolic-ref -q --short HEAD)
            BASE_BRANCH=$(curl -s https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PR_NUMBER} | jq -r '.base.ref')
            git checkout --track origin/$BASE_BRANCH
            git checkout $CURRENT_BRANCH
            echo "Finding files to lint"
            FILES=$(git diff --name-only --diff-filter=bd $(git merge-base HEAD $BASE_BRANCH) | grep '^packages/.*\.[tj]s$') || true
            [ -z "$FILES" ] && echo "No files found" && exit 0
            echo "Found:"
            echo $FILES
            yarn run eslint --max-warnings 0 --format junit -o reports/lint/lint.xml $FILES
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports

  unit-test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: mkdir reports
      - run:
          name: Unit Tests
          environment:
            JEST_JUNIT_OUTPUT: reports/unit/results.xml
          command: yarn test:unit --ci --runInBand --detectOpenHandles --reporters="jest-junit" --reporters="default"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports

  integration-test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: mkdir reports
      - run:
          name: Integration Tests
          environment:
            JEST_JUNIT_OUTPUT: reports/integration/results.xml
          command: yarn test:integration --ci --runInBand --detectOpenHandles --reporters="jest-junit" --reporters="default"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports

  publish-latest:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Login to npm
          command: npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      - run:
          name: Publish to npm
          command: yarn release:latest --yes

  publish-next:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Login to npm
          command: npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      - run:
          name: Publish to npm
          command: yarn release:next --yes

workflows:
  version: 2
  build_and_test:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - gh-pages
                - master
            tags:
              ignore: /.*/
      - lint:
          requires:
            - setup
      - unit-test:
          requires:
            - setup
      - integration-test:
          requires:
            - lint
            - unit-test

  publish:
    jobs:
      - setup:
          filters:
            branches:
              only: master
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+$/
      - publish-latest:
          requires:
            - setup
          filters:
            branches:
              only: master
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+$/
